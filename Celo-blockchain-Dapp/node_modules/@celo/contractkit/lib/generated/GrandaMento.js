"use strict";
/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.newGrandaMento = exports.ABI = void 0;
exports.ABI = [
    {
        inputs: [{ internalType: 'bool', name: 'test', type: 'bool' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'constructor',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'approver',
                type: 'address',
            },
        ],
        name: 'ApproverSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'proposalId',
                type: 'uint256',
            },
        ],
        name: 'ExchangeProposalApproved',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'proposalId',
                type: 'uint256',
            },
        ],
        name: 'ExchangeProposalCancelled',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'proposalId',
                type: 'uint256',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'exchanger',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'string',
                name: 'stableTokenRegistryId',
                type: 'string',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'sellAmount',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'buyAmount',
                type: 'uint256',
            },
            { indexed: false, internalType: 'bool', name: 'sellCelo', type: 'bool' },
        ],
        name: 'ExchangeProposalCreated',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'uint256',
                name: 'proposalId',
                type: 'uint256',
            },
        ],
        name: 'ExchangeProposalExecuted',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'maxApprovalExchangeRateChange',
                type: 'uint256',
            },
        ],
        name: 'MaxApprovalExchangeRateChangeSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'registryAddress',
                type: 'address',
            },
        ],
        name: 'RegistrySet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'spread',
                type: 'uint256',
            },
        ],
        name: 'SpreadSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'string',
                name: 'stableTokenRegistryId',
                type: 'string',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'minExchangeAmount',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'maxExchangeAmount',
                type: 'uint256',
            },
        ],
        name: 'StableTokenExchangeLimitsSet',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'uint256',
                name: 'vetoPeriodSeconds',
                type: 'uint256',
            },
        ],
        name: 'VetoPeriodSecondsSet',
        type: 'event',
    },
    {
        constant: true,
        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        name: 'activeProposalIdsSuperset',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'approver',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'exchangeProposalCount',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        name: 'exchangeProposals',
        outputs: [
            { internalType: 'address payable', name: 'exchanger', type: 'address' },
            { internalType: 'address', name: 'stableToken', type: 'address' },
            {
                internalType: 'enum GrandaMento.ExchangeProposalState',
                name: 'state',
                type: 'uint8',
            },
            { internalType: 'bool', name: 'sellCelo', type: 'bool' },
            { internalType: 'uint256', name: 'sellAmount', type: 'uint256' },
            { internalType: 'uint256', name: 'buyAmount', type: 'uint256' },
            {
                internalType: 'uint256',
                name: 'celoStableTokenExchangeRate',
                type: 'uint256',
            },
            { internalType: 'uint256', name: 'vetoPeriodSeconds', type: 'uint256' },
            { internalType: 'uint256', name: 'approvalTimestamp', type: 'uint256' },
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'initialized',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'isOwner',
        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'maxApprovalExchangeRateChange',
        outputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'owner',
        outputs: [{ internalType: 'address', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'registry',
        outputs: [{ internalType: 'contract IRegistry', name: '', type: 'address' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'address', name: 'registryAddress', type: 'address' }],
        name: 'setRegistry',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'spread',
        outputs: [{ internalType: 'uint256', name: 'value', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ internalType: 'string', name: '', type: 'string' }],
        name: 'stableTokenExchangeLimits',
        outputs: [
            { internalType: 'uint256', name: 'minExchangeAmount', type: 'uint256' },
            { internalType: 'uint256', name: 'maxExchangeAmount', type: 'uint256' },
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'address', name: 'newOwner', type: 'address' }],
        name: 'transferOwnership',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'vetoPeriodSeconds',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'getVersionNumber',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        payable: false,
        stateMutability: 'pure',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { internalType: 'address', name: '_registry', type: 'address' },
            { internalType: 'address', name: '_approver', type: 'address' },
            {
                internalType: 'uint256',
                name: '_maxApprovalExchangeRateChange',
                type: 'uint256',
            },
            { internalType: 'uint256', name: '_spread', type: 'uint256' },
            { internalType: 'uint256', name: '_vetoPeriodSeconds', type: 'uint256' },
        ],
        name: 'initialize',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { internalType: 'string', name: 'stableTokenRegistryId', type: 'string' },
            { internalType: 'uint256', name: 'sellAmount', type: 'uint256' },
            { internalType: 'bool', name: 'sellCelo', type: 'bool' },
        ],
        name: 'createExchangeProposal',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'uint256', name: 'proposalId', type: 'uint256' }],
        name: 'approveExchangeProposal',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'uint256', name: 'proposalId', type: 'uint256' }],
        name: 'cancelExchangeProposal',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'uint256', name: 'proposalId', type: 'uint256' }],
        name: 'executeExchangeProposal',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [
            {
                internalType: 'uint256',
                name: 'celoStableTokenExchangeRate',
                type: 'uint256',
            },
            { internalType: 'uint256', name: 'sellAmount', type: 'uint256' },
            { internalType: 'bool', name: 'sellCelo', type: 'bool' },
        ],
        name: 'getBuyAmount',
        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],
        name: 'removeFromActiveProposalIdsSuperset',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: true,
        inputs: [],
        name: 'getActiveProposalIds',
        outputs: [{ internalType: 'uint256[]', name: '', type: 'uint256[]' }],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: true,
        inputs: [{ internalType: 'string', name: 'stableTokenRegistryId', type: 'string' }],
        name: 'getStableTokenExchangeLimits',
        outputs: [
            { internalType: 'uint256', name: '', type: 'uint256' },
            { internalType: 'uint256', name: '', type: 'uint256' },
        ],
        payable: false,
        stateMutability: 'view',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'address', name: 'newApprover', type: 'address' }],
        name: 'setApprover',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            {
                internalType: 'uint256',
                name: 'newMaxApprovalExchangeRateChange',
                type: 'uint256',
            },
        ],
        name: 'setMaxApprovalExchangeRateChange',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'uint256', name: 'newSpread', type: 'uint256' }],
        name: 'setSpread',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [
            { internalType: 'string', name: 'stableTokenRegistryId', type: 'string' },
            { internalType: 'uint256', name: 'minExchangeAmount', type: 'uint256' },
            { internalType: 'uint256', name: 'maxExchangeAmount', type: 'uint256' },
        ],
        name: 'setStableTokenExchangeLimits',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        constant: false,
        inputs: [{ internalType: 'uint256', name: 'newVetoPeriodSeconds', type: 'uint256' }],
        name: 'setVetoPeriodSeconds',
        outputs: [],
        payable: false,
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
function newGrandaMento(web3, address) {
    return new web3.eth.Contract(exports.ABI, address);
}
exports.newGrandaMento = newGrandaMento;
//# sourceMappingURL=GrandaMento.js.map