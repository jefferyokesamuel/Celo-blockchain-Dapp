import { EpochRewards } from '../generated/EpochRewards';
import { BaseWrapper } from './BaseWrapper';
export declare class EpochRewardsWrapper extends BaseWrapper<EpochRewards> {
    getRewardsMultiplierParameters: () => Promise<{
        max: import("bignumber.js").default;
        underspendAdjustment: import("bignumber.js").default;
        overspendAdjustment: import("bignumber.js").default;
    }>;
    getTargetVotingYieldParameters: () => Promise<{
        target: import("bignumber.js").default;
        max: import("bignumber.js").default;
        adjustment: import("bignumber.js").default;
    }>;
    getCommunityReward: () => Promise<import("bignumber.js").default>;
    getCarbonOffsetting: () => Promise<{
        factor: import("bignumber.js").default;
        partner: string;
    }>;
    getTargetValidatorEpochPayment: () => Promise<import("bignumber.js").default>;
    getConfig(): Promise<{
        rewardsMultiplier: {
            max: import("bignumber.js").default;
            underspendAdjustment: import("bignumber.js").default;
            overspendAdjustment: import("bignumber.js").default;
        };
        carbonOffsetting: {
            factor: import("bignumber.js").default;
            partner: string;
        };
        communityReward: import("bignumber.js").default;
        targetVotingYield: {
            target: import("bignumber.js").default;
            max: import("bignumber.js").default;
            adjustment: import("bignumber.js").default;
        };
        targetValidatorEpochPayment: import("bignumber.js").default;
    }>;
}
