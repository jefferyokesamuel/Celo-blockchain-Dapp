"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GrandaMentoWrapper = exports.ExchangeProposalState = void 0;
var bignumber_js_1 = __importDefault(require("bignumber.js"));
var celo_tokens_1 = require("../celo-tokens");
var StableToken_1 = require("../generated/StableToken");
var BaseWrapper_1 = require("./BaseWrapper");
var StableTokenWrapper_1 = require("./StableTokenWrapper");
var ExchangeProposalState;
(function (ExchangeProposalState) {
    ExchangeProposalState[ExchangeProposalState["None"] = 0] = "None";
    ExchangeProposalState[ExchangeProposalState["Proposed"] = 1] = "Proposed";
    ExchangeProposalState[ExchangeProposalState["Approved"] = 2] = "Approved";
    ExchangeProposalState[ExchangeProposalState["Executed"] = 3] = "Executed";
    ExchangeProposalState[ExchangeProposalState["Cancelled"] = 4] = "Cancelled";
})(ExchangeProposalState = exports.ExchangeProposalState || (exports.ExchangeProposalState = {}));
var GrandaMentoWrapper = /** @class */ (function (_super) {
    __extends(GrandaMentoWrapper, _super);
    function GrandaMentoWrapper() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.owner = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.owner);
        _this.approver = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.approver);
        _this.setApprover = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.setApprover);
        _this.maxApprovalExchangeRateChange = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.maxApprovalExchangeRateChange, undefined, BaseWrapper_1.fixidityValueToBigNumber);
        _this.setMaxApprovalExchangeRateChange = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.setMaxApprovalExchangeRateChange);
        _this.spread = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.spread, undefined, BaseWrapper_1.fixidityValueToBigNumber);
        _this.setSpread = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.setSpread);
        _this.vetoPeriodSeconds = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.vetoPeriodSeconds, undefined, BaseWrapper_1.valueToBigNumber);
        _this.setVetoPeriodSeconds = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.setVetoPeriodSeconds);
        _this.exchangeProposalCount = (0, BaseWrapper_1.proxyCall)(_this.contract.methods.exchangeProposalCount, undefined, BaseWrapper_1.valueToBigNumber);
        _this.setStableTokenExchangeLimits = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.setStableTokenExchangeLimits);
        _this.approveExchangeProposal = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.approveExchangeProposal);
        _this.executeExchangeProposal = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.executeExchangeProposal);
        _this.cancelExchangeProposal = (0, BaseWrapper_1.proxySend)(_this.kit, _this.contract.methods.cancelExchangeProposal);
        return _this;
    }
    GrandaMentoWrapper.prototype.getActiveProposalIds = function () {
        return __awaiter(this, void 0, void 0, function () {
            var unfilteredIds;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods.getActiveProposalIds().call()
                        // '0' is given to signify an ID that is no longer active, so we filter them out.
                    ];
                    case 1:
                        unfilteredIds = _a.sent();
                        // '0' is given to signify an ID that is no longer active, so we filter them out.
                        return [2 /*return*/, unfilteredIds.filter(function (id) { return id !== '0'; })];
                }
            });
        });
    };
    GrandaMentoWrapper.prototype.createExchangeProposal = function (stableTokenRegistryId, sellAmount, sellCelo) {
        return __awaiter(this, void 0, void 0, function () {
            var createExchangeProposalInner;
            return __generator(this, function (_a) {
                createExchangeProposalInner = (0, BaseWrapper_1.proxySend)(this.kit, this.contract.methods.createExchangeProposal);
                return [2 /*return*/, createExchangeProposalInner(stableTokenRegistryId, sellAmount.toFixed(), sellCelo)];
            });
        });
    };
    GrandaMentoWrapper.prototype.exchangeProposalExists = function (exchangeProposalID) {
        return __awaiter(this, void 0, void 0, function () {
            var result, state;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods.exchangeProposals(exchangeProposalID).call()];
                    case 1:
                        result = _a.sent();
                        state = parseInt(result.state, 10);
                        return [2 /*return*/, !(state === ExchangeProposalState.None)];
                }
            });
        });
    };
    GrandaMentoWrapper.prototype.getExchangeProposal = function (exchangeProposalID) {
        return __awaiter(this, void 0, void 0, function () {
            var result, state;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods.exchangeProposals(exchangeProposalID).call()];
                    case 1:
                        result = _a.sent();
                        state = parseInt(result.state, 10);
                        if (state === ExchangeProposalState.None) {
                            throw new Error("Proposal doesn't exist");
                        }
                        return [2 /*return*/, {
                                exchanger: result.exchanger,
                                stableToken: result.stableToken,
                                sellAmount: new bignumber_js_1.default(result.sellAmount),
                                buyAmount: new bignumber_js_1.default(result.buyAmount),
                                vetoPeriodSeconds: new bignumber_js_1.default(result.vetoPeriodSeconds),
                                approvalTimestamp: new bignumber_js_1.default(result.approvalTimestamp),
                                sellCelo: result.sellCelo,
                                state: state,
                                id: exchangeProposalID,
                            }];
                }
            });
        });
    };
    GrandaMentoWrapper.prototype.getHumanReadableExchangeProposal = function (exchangeProposalID) {
        return __awaiter(this, void 0, void 0, function () {
            var proposal, stableTokenContract, _a, _b;
            var _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0: return [4 /*yield*/, this.getExchangeProposal(exchangeProposalID)];
                    case 1:
                        proposal = _d.sent();
                        stableTokenContract = new StableTokenWrapper_1.StableTokenWrapper(this.kit, (0, StableToken_1.newStableToken)(this.kit.connection.web3, proposal.stableToken));
                        _a = [__assign({}, proposal)];
                        _c = {};
                        return [4 /*yield*/, stableTokenContract.name()];
                    case 2:
                        _b = (_d.sent()) + " (";
                        return [4 /*yield*/, stableTokenContract.symbol()];
                    case 3: return [2 /*return*/, __assign.apply(void 0, _a.concat([(_c.stableToken = _b + (_d.sent()) + ") at " + proposal.stableToken, _c.implictPricePerCelo = proposal.sellCelo
                                ? proposal.buyAmount.div(proposal.sellAmount)
                                : proposal.sellAmount.div(proposal.buyAmount), _c.state = ExchangeProposalState[proposal.state], _c)]))];
                }
            });
        });
    };
    GrandaMentoWrapper.prototype.stableTokenExchangeLimits = function (stableTokenTymbol) {
        return __awaiter(this, void 0, void 0, function () {
            var stableTokenRegistryId, result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        stableTokenRegistryId = this.kit.celoTokens.getContract(stableTokenTymbol);
                        return [4 /*yield*/, this.contract.methods
                                .stableTokenExchangeLimits(stableTokenRegistryId.toString())
                                .call()];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, {
                                minExchangeAmount: new bignumber_js_1.default(result.minExchangeAmount),
                                maxExchangeAmount: new bignumber_js_1.default(result.maxExchangeAmount),
                            }];
                }
            });
        });
    };
    GrandaMentoWrapper.prototype.getAllStableTokenLimits = function () {
        return __awaiter(this, void 0, void 0, function () {
            var out, res;
            var _this = this;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        out = new Map();
                        return [4 /*yield*/, Promise.all(Object.values(celo_tokens_1.StableToken).map(function (key) { return _this.stableTokenExchangeLimits(key); }))];
                    case 1:
                        res = _a.sent();
                        Object.values(celo_tokens_1.StableToken).map(function (key, index) {
                            return out.set(_this.kit.celoTokens.getContract(key), res[index]);
                        });
                        return [2 /*return*/, out];
                }
            });
        });
    };
    GrandaMentoWrapper.prototype.getBuyAmount = function (celoStableTokenOracleRate, // Note this is intended to be a fixed point number
    sellAmount, sellCelo) {
        return __awaiter(this, void 0, void 0, function () {
            var result;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, this.contract.methods
                            .getBuyAmount(celoStableTokenOracleRate.toFixed(), sellAmount.toFixed(), sellCelo)
                            .call()];
                    case 1:
                        result = _a.sent();
                        return [2 /*return*/, new bignumber_js_1.default(result)];
                }
            });
        });
    };
    GrandaMentoWrapper.prototype.getConfig = function () {
        return __awaiter(this, void 0, void 0, function () {
            var res;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0: return [4 /*yield*/, Promise.all([
                            this.approver(),
                            this.spread(),
                            this.vetoPeriodSeconds(),
                            this.maxApprovalExchangeRateChange(),
                            this.getAllStableTokenLimits(),
                        ])];
                    case 1:
                        res = _a.sent();
                        return [2 /*return*/, {
                                approver: res[0],
                                spread: res[1],
                                vetoPeriodSeconds: res[2],
                                maxApprovalExchangeRateChange: res[3],
                                exchangeLimits: res[4],
                            }];
                }
            });
        });
    };
    return GrandaMentoWrapper;
}(BaseWrapper_1.BaseWrapper));
exports.GrandaMentoWrapper = GrandaMentoWrapper;
//# sourceMappingURL=GrandaMento.js.map